name: Python CI

on:
  workflow_call:

permissions: read-all

jobs:
  paths-filter:
    name: Paths filter
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.filter.outputs.src }}
      ethereum: ${{ steps.filter.outputs.ethereum }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - 'cairo/src/**'

  test:
    name: Python
    runs-on: ubuntu-latest-64-cores
    needs: paths-filter
    env:
      HYPOTHESIS_PROFILE: ci
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - uses: actions/setup-python@v5
        with:
          python-version-file: ./cairo/.python-version

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install forge deps
        run: forge install

      - name: Build solidity contracts
        run: forge build

      - name: Run tests with src
        if: ${{ needs.paths-filter.outputs.src == 'true' }}
        env:
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
        run: |
          cd cairo
          uv run compile_os
          uv run pytest -n logical --junitxml=junit.xml -o junit_family=legacy --durations=0 -v

      - name: Run tests without src
        if: ${{ needs.paths-filter.outputs.src == 'false' }}
        run: |
          cd cairo
          uv run compile_os
          uv run pytest -n logical --ignore=tests/src --ignore=tests/programs --junitxml=junit.xml -o junit_family=legacy --durations=0 -v

      - uses: codecov/codecov-action@v5.0.5
        with:
          directory: ./cairo/coverage/
      - uses: codecov/test-results-action@v1
        if: ${{ !cancelled() }}
