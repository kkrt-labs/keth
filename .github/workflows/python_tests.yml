name: Python CI

on:
  workflow_call:
    inputs:
      max-tests:
        required: true
        type: number

permissions: read-all

jobs:
  test-unit:
    name: Python Unit Tests
    runs-on: ubuntu-latest-64-cores
    env:
      HYPOTHESIS_PROFILE: ci
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      CAIRO_PATH: cairo:tests:python/cairo-ec/src:python/cairo-addons/src:python/cairo-core/src
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Install forge deps
        run: forge install
      - name: Build solidity contracts
        run: forge build
      - name: Restore pytest cache
        id: cache-pytest-restore
        uses: actions/cache/restore@v4
        with:
          path: .pytest_cache
          key: ${{ runner.os }}-pytest-cache-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-pytest-cache-

      # TODO: remove --no-skip-cached-tests if/when we cache coverage
      # <https://github.com/kkrt-labs/keth/issues/694>
      - name: Run unit tests without caching
        run: |
          uv run --reinstall pytest -n logical --durations=0 -v -s --log-cli-level=DEBUG --no-skip-cached-tests --ignore-glob=cairo/tests/ef_tests/

      - uses: actions/cache/save@v4
        with:
          path: .pytest_cache
          key: ${{ runner.os }}-pytest-cache-${{ github.run_id }}
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          files: ./coverage/**/*.json
          flags: ci-unit

  ef-tests-sampled:
    name: EF-Tests Sampled
    runs-on: ubuntu-latest-64-cores
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      CAIRO_PATH: cairo:tests:python/cairo-ec/src:python/cairo-addons/src:python/cairo-core/src
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Run sampled EF tests
        run: |
          # Runs up to ${{ inputs.max-tests }} tests, randomly sampled using the GITHUB_RUN_ID seed
          # Use only 48 cores to avoid out of memory issues
          uv run --reinstall pytest -n 48 -m "not slow" --timeout 300 --durations=0 -v -s --log-cli-level=DEBUG --max-tests=${{ inputs.max-tests }} --randomly-seed=$GITHUB_RUN_ID cairo/tests/ef_tests/ --ignore-glob='cairo/tests/ef_tests/fixtures/*'
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          files: ./coverage/**/*.json
          flags: ci-ef-tests
